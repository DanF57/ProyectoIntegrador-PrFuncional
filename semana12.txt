import java.time.LocalDate
import java.time.format.DateTimeFormatter

val dateFormatter = DateTimeFormatter.ofPattern("yyyy-MM-dd")
val realeaseDateList = data
	.map(row => row("release_date"))
	.filter(!_.equals(""))
	.map(text => LocalDate.parse(text, dateFormatter))
val yearReleaseList = releaseDateList
	.map(_.getYear)
printf("A単o menor: %\n", yearReleaseList.min)
printf("A単o mayor: %\n", yearReleaseList.max)

//dependencia en bill.sbt
libraryDependencies += "io.github.cibotech" %% "evilplot" % "0.8.1"

//elementos a importar
import com.cibo.evilplot.plot._
import com.cibo.evilplot.plot.aesthetics.DefaultTheme.{DefaultElements, DefaultTheme}

//lanzamiento de peliculas por a単o
val yearReleaseList = releaseDateList
	.map(_.getYear)
	.map(_.toDouble)
Histogram(yearReleaseList)
	.title("A単os de lanzamiento")
	.xAxis()
	.yAxis()
	.xbounds(1916.0, 2018.0)
	.render()
	.write(new File("ruta.png"))